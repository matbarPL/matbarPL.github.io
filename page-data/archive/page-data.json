{
    "componentChunkName": "component---src-pages-archive-js",
    "path": "/archive/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2024-01-20","title":"Portfolio 1.0","tech":["HTML","CSS","hugo"],"github":"https://github.com/matbarPL/matbarPL.github.io-1.0","external":"https://matbarpl.github.io/matbarPL.github.io-1.0/","company":"datadriven.ai","youtube":null},"html":"<p>In Portfolio 1.0, I built a foundational website using Hugo. This project marked the beginning of my portfolio development journey and showcased my early skills in creating a dynamic online presence. By leveraging Hugo's framework, I was able to efficiently structure and deploy my website, demonstrating basic understanding of web development principles.</p>"}},{"node":{"frontmatter":{"date":"2021-01-25","title":"Movie ratings thanks to given personality traits","tech":["python","flask","React","JWT","NumPy","sqlite3"],"github":"https://github.com/matbarPL/moviesperstraits","external":null,"company":"UW","youtube":null},"html":"<p>In this project, I built a movie recommendation system that uses personality traits to suggest films. I leveraged a personality dataset from Kaggle and employed various technologies like Python, Flask, scikit-learn, React, and JWT to create a user-friendly interface. This allows users to input their personality traits and receive personalized movie recommendations.</p>"}},{"node":{"frontmatter":{"date":"2020-06-30","title":"A tool for opinion extraction from texts","tech":["python","fasttext","scikit-learn","React"],"github":"https://github.com/matbarPL/stance-tagger-kedro","external":null,"company":"WUST","youtube":null},"html":"<p>We created a web application to extract opinions from text using natural language processing techniques. The application leverages the Kedro library to streamline data engineering and machine learning pipelines, allowing for efficient model training and retraining. Users can input text, and the application will identify the stance, opinion, and sentiment expressed within the text. The application also includes a user-friendly interface for data visualization and analysis.</p>"}},{"node":{"frontmatter":{"date":"2019-02-06","title":"Recommender System for YELP users","tech":["python","pandas","surprise","keras","scikit-learn","HTML","CSS","JavaScript"],"github":"https://github.com/matbarPL/Recommender-system-for-yelp.com-users","external":null,"company":"WUST","youtube":"https://www.youtube.com/watch?v=tKwbLZ40nag"},"html":"<p>We built a web application to recommend businesses to YELP users, leveraging various algorithms for user selection.  The application allows users to explore recommendations generated by collaborative filtering, neural networks, KNN, and content-based approaches, ultimately delivering the most relevant suggestions based on user preferences and location.  Check out the video below to see the application in action!</p>"}},{"node":{"frontmatter":{"date":"2018-05-04","title":"What is this fruit? Deep learning application for Vietnamese fruit recognition.","tech":["python","keras","flask","HTML","CSS","JavaScript"],"github":null,"external":"https://www.itm-conferences.org/articles/itmconf/abs/2018/05/itmconf_icm2018_02009/itmconf_icm2018_02009.html","company":"WUST","youtube":"https://youtu.be/MRP2OjZHOi8?si=1teaE6cksmZ2vN9r"},"html":"<p>We developed a deep learning application to help identify Vietnamese fruits. By using a convolutional neural network trained on a dataset of fruit images, users can upload pictures of unknown fruits and receive an instant identification. This project was undertaken as part of an academic course and showcases the practical application of deep learning in a real-world scenario.</p>"}},{"node":{"frontmatter":{"date":"2018-03-13","title":"Timetable generation using genetic programming","tech":["python","xlsxwriter","xlrd","openpyxl","random"],"github":"https://github.com/matbarPL/Constraint-satisfaction-problem","external":null,"company":"TDT","youtube":null},"html":"<p>I developed an AI-powered constraint satisfaction problem solver for timetable generation during a student exchange program. The system was designed to accept constraints for teachers and subjects from an Excel file and employed a genetic algorithm to generate optimal timetables that satisfy all the given constraints. The system effectively generates high-quality timetables within a reasonable timeframe, typically within 4.5 seconds.</p>"}},{"node":{"frontmatter":{"date":"2017-12-01","title":"Approximate functions using C++ and genetic programming","tech":["C++","OOP","STL"],"github":"https://github.com/matbarPL/Genetic-programming","external":null,"company":"WUST","youtube":null},"html":"<p>The approach involves using non-binary trees to represent expressions in the genetic programming process. I begin by generating an initial population of these expression trees, which are evaluated for their ability to approximate a function of two variables. Through genetic operators such as selection, mutation, and crossover, I iteratively evolve the population toward better solutions. This method leverages the fundamental principles of genetic programming to optimize mathematical expressions efficiently.</p>"}}]}},"pageContext":{}},
    "staticQueryHashes": ["1994492073","3105847544","3185194994","3687774299"]}